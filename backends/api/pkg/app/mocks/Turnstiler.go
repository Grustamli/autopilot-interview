// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTurnstiler is an autogenerated mock type for the Turnstiler type
type MockTurnstiler struct {
	mock.Mock
}

type MockTurnstiler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTurnstiler) EXPECT() *MockTurnstiler_Expecter {
	return &MockTurnstiler_Expecter{mock: &_m.Mock}
}

// Verify provides a mock function with given fields: ctx, token, action
func (_m *MockTurnstiler) Verify(ctx context.Context, token string, action string) (bool, error) {
	ret := _m.Called(ctx, token, action)

	if len(ret) == 0 {
		panic("no return value specified for Verify")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (bool, error)); ok {
		return rf(ctx, token, action)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) bool); ok {
		r0 = rf(ctx, token, action)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, token, action)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockTurnstiler_Verify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Verify'
type MockTurnstiler_Verify_Call struct {
	*mock.Call
}

// Verify is a helper method to define mock.On call
//   - ctx context.Context
//   - token string
//   - action string
func (_e *MockTurnstiler_Expecter) Verify(ctx interface{}, token interface{}, action interface{}) *MockTurnstiler_Verify_Call {
	return &MockTurnstiler_Verify_Call{Call: _e.mock.On("Verify", ctx, token, action)}
}

func (_c *MockTurnstiler_Verify_Call) Run(run func(ctx context.Context, token string, action string)) *MockTurnstiler_Verify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockTurnstiler_Verify_Call) Return(_a0 bool, _a1 error) *MockTurnstiler_Verify_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockTurnstiler_Verify_Call) RunAndReturn(run func(context.Context, string, string) (bool, error)) *MockTurnstiler_Verify_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTurnstiler creates a new instance of MockTurnstiler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTurnstiler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTurnstiler {
	mock := &MockTurnstiler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
